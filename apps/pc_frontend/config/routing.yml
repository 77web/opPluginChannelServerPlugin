plugin_rest:
  url:  /pluginRest/
  class: sfRequestRoute
  param: { module: package, action: new }
  requirements:
    sf_method: [get]

package_new:
  url:  /package/new
  class: sfRequestRoute
  param: { module: package, action: new }
  requirements:
    sf_method: [get]

package_create:
  url:  /package/create
  class: sfRequestRoute
  param: { module: package, action: create }
  requirements:
    sf_method: [post]

package_use:
  url:  /package/use/:name
  class: sfDoctrineRoute
  options: { model: PluginPackage, type: object }
  param: { module: package, action: toggleUsing }
  requirements:
    name: op.+Plugin
    sf_method: [post]

package_unuse:
  url:  /package/unuse/:name
  class: sfDoctrineRoute
  options: { model: PluginPackage, type: object }
  param: { module: package, action: toggleUsing }
  requirements:
    name: op.+Plugin
    sf_method: [post]

package_add_release:
  url:  /package/:name/release/add
  class: sfDoctrineRoute
  options: { model: PluginPackage, type: object }
  param: { module: package, action: addRelease }
  requirements:
    name: op.+Plugin
    sf_method: [get, post]

package_join:
  url:  /package/:name/join
  class: sfDoctrineRoute
  options: { model: PluginPackage, type: object }
  param: { module: package, action: join }
  requirements:
    name: op.+Plugin
    sf_method: [get, post]

package_manageMember:
  url:  /package/:name/manageMember
  class: sfDoctrineRoute
  options: { model: PluginPackage, type: object }
  param: { module: package, action: manageMember }
  requirements:
    name: op.+Plugin
    sf_method: [get, post]

package_home:
  url:  /package/:name
  class: sfDoctrineRoute
  options: { model: PluginPackage, type: object }
  param: { module: package, action: home }
  requirements:
    name: op.+Plugin
    sf_method: [get]
